<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Apps.DAL.IBatis.ApplicationErrorProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
	<alias>
		<typeAlias alias="ApplicationErrorInfo" type="X3Platform.Apps.Model.ApplicationErrorInfo,X3Platform.Apps" />
	</alias>
	<resultMaps>
		<resultMap id="proc_Application_Error_FindOne_Result" class="ApplicationErrorInfo">
			<result property="Id" column="Id" />
			<result property="ApplicationId" column="ApplicationId" />
			<result property="Code" column="Code" />
			<result property="Title" column="Title" />
			<result property="Description" column="Description" />
      <result property="StatusCode" column="StatusCode" />
			<result property="Locking" column="Locking" />
			<result property="Tags" column="Tags" />
			<result property="ModifiedDate" column="ModifiedDate" />
			<result property="CreatedDate" column="CreatedDate" />
		</resultMap>
		<resultMap id="proc_Application_Error_FindAll_Result" class="ApplicationErrorInfo">
			<result property="Id" column="Id" />
			<result property="ApplicationId" column="ApplicationId" />
			<result property="Code" column="Code" />
			<result property="Title" column="Title" />
			<result property="Description" column="Description" />
      <result property="StatusCode" column="StatusCode" />
			<result property="Locking" column="Locking" />
			<result property="Tags" column="Tags" />
			<result property="ModifiedDate" column="ModifiedDate" />
			<result property="CreatedDate" column="CreatedDate" />
		</resultMap>
	</resultMaps>
	<statements>
		<insert id="proc_Application_Error_Insert" parameterClass="ApplicationErrorInfo">
			INSERT INTO tb_Application_Error
			(
				Id,
				ApplicationId,
				Code,
				Title,
				Description,
        StatusCode,
				Locking,
				Tags,
				ModifiedDate,
				CreatedDate
			)
			VALUES
			(
				#Id#,
				#ApplicationId#,
				#Code#,
				#Title#,
				#Description#,
        #StatusCode#,
				#Locking#,
				#Tags#,
				CURRENT_TIMESTAMP,
				CURRENT_TIMESTAMP
			)
		</insert>

		<update id="proc_Application_Error_Update" parameterClass="ApplicationErrorInfo">
			UPDATE tb_Application_Error SET

				Id = #Id#,
				ApplicationId = #ApplicationId#,
				Code = #Code#,
				Title = #Title#,
				Description = #Description#,
        StatusCode = #StatusCode#,
				Locking = #Locking#,
				Tags = #Tags#,
				ModifiedDate = CURRENT_TIMESTAMP

			WHERE Id = #Id#
		</update>

		<update id="proc_Application_Error_Delete" >
			UPDATE tb_Application_Error SET Status = 0 WHERE $WhereClause$
		</update>

		<delete id="proc_Application_Error_Delete(PhysicallyRemoved)" >
			DELETE FROM tb_Application_Error WHERE $WhereClause$
		</delete>

		<update id="proc_Application_Error_Delete(VirtualRemoved)" >
			UPDATE tb_Application_Error SET Status = 0 WHERE $WhereClause$
		</update>

		<select id="proc_Application_Error_FindOne" resultMap="proc_Application_Error_FindOne_Result" >
			SELECT * FROM tb_Application_Error T WHERE Id = #Id#
		</select>

		<select id="proc_Application_Error_FindOneByCode" resultMap="proc_Application_Error_FindOne_Result" >
			SELECT * FROM tb_Application_Error T WHERE Code = #Code#
		</select>

		<select id="proc_Application_Error_FindAll#MySql" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT * FROM tb_Application_Error T

			<dynamic prepend="WHERE">
			    <isParameterPresent>
				    <isNotEmpty prepend="AND" property="WhereClause" >
				        $WhereClause$
				    </isNotEmpty>
			    </isParameterPresent>
			</dynamic>
            
            <dynamic prepend="LIMIT">
                <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
                    0,$Length$
                </isNotEqual>
            </dynamic>
		</select>

		<select id="proc_Application_Error_FindAll#SqlServer" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT

			<dynamic prepend="TOP">
				<isNotEqual prepend="TOP" property="Length" compareValue = "0">
					$Length$
				</isNotEqual>
			</dynamic>

			* FROM tb_Application_Error T

			  <dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			  </dynamic>
		</select>
		<select id="proc_Application_Error_GetPaging#MySql" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT * FROM tb_Application_Error T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            ORDER BY $OrderBy$
            
            LIMIT $StartIndex$, $PageSize$
		</select>
		<select id="proc_Application_Error_GetPaging#SqlServer" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT *

			FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

				FROM tb_Application_Error T

				<dynamic prepend="WHERE">
				    <isParameterPresent>
				        <isNotEmpty prepend="AND" property="WhereClause" >
					    $WhereClause$
				        </isNotEmpty>
				    </isParameterPresent>
				</dynamic>) TableIndex

			WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
		</select>
        <!-- SQL Server 2000 -->
		<select id="proc_Application_Error_GetPaging#SqlServer80" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT TOP $PageSize$ *

			FROM tb_Application_Error T

			WHERE Id NOT IN (
				SELECT TOP $StartIndex$ Id FROM tb_Application_Error T
				<dynamic prepend="WHERE">
					<isParameterPresent>
						<isNotEmpty prepend="AND" property="WhereClause" >
						$WhereClause$
						</isNotEmpty>
					</isParameterPresent>
				</dynamic> ORDER BY $OrderBy$ )

			<dynamic prepend="AND">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			</dynamic>
			ORDER BY $OrderBy$
		</select>
        <!-- SQL Server 2005 / SQL Server 2008 (默认) -->
		<select id="proc_Application_Error_GetPages(SQLServer2008)" resultMap="proc_Application_Error_FindAll_Result" >
			SELECT *

			FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

				FROM tb_Application_Error T

				<dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
				</dynamic>) TableIndex

			WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
		</select>
		<select id="proc_Application_Error_GetRowCount" >
			SELECT COUNT(0) AS 'RowCount' FROM tb_Application_Error T

			<dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
			</dynamic>
		</select>
		<select id="proc_Application_Error_IsExist" >
			SELECT COUNT(0) AS 'Count' FROM tb_Application_Error T WHERE $WhereClause$
		</select>
	</statements>
</sqlMap>
