<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Apps.DAL.IBatis.ApplicationProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="ApplicationInfo" type="X3Platform.Apps.Model.ApplicationInfo,X3Platform.Apps" />
  </alias>
  <resultMaps>
    <resultMap id="proc_Application_FindOne_Result" class="ApplicationInfo">
      <result property="Id" column="Id" />
      <result property="AccountId" column="AccountId" />
      <result property="ParentId" column="ParentId" />
      <result property="Code" column="Code" />
      <result property="ApplicationName" column="ApplicationName" />
      <result property="ApplicationDisplayName" column="ApplicationDisplayName" />
      <result property="ApplicationKey" column="ApplicationKey" />
      <result property="ApplicationSecret" column="ApplicationSecret" />
      <result property="PinYin" column="PinYin" />
      <result property="Description" column="Description" />
      <result property="HasChildren" column="HasChildren" />
      <result property="AdministratorEmail" column="AdministratorEmail" />
      <result property="IconPath" column="IconPath" />
      <result property="BigIconPath" column="BigIconPath" />
      <result property="HelpUrl" column="HelpUrl" />
      <result property="LicenseStatus" column="LicenseStatus" />
      <result property="Hidden" column="Hidden" />
      <result property="Locking" column="Locking" />
      <result property="OrderId" column="OrderId" />
      <result property="Status" column="Status" />
      <result property="Remark" column="Remark" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
    <resultMap id="proc_Application_FindAll_Result" class="ApplicationInfo">
      <result property="Id" column="Id" />
      <result property="AccountId" column="AccountId" />
      <result property="ParentId" column="ParentId" />
      <result property="Code" column="Code" />
      <result property="ApplicationName" column="ApplicationName" />
      <result property="ApplicationDisplayName" column="ApplicationDisplayName" />
      <result property="ApplicationKey" column="ApplicationKey" />
      <result property="ApplicationSecret" column="ApplicationSecret" />
      <result property="PinYin" column="PinYin" />
      <result property="Description" column="Description" />
      <result property="HasChildren" column="HasChildren" />
      <result property="AdministratorEmail" column="AdministratorEmail" />
      <result property="IconPath" column="IconPath" />
      <result property="BigIconPath" column="BigIconPath" />
      <result property="HelpUrl" column="HelpUrl" />
      <result property="LicenseStatus" column="LicenseStatus" />
      <result property="Hidden" column="Hidden" />
      <result property="Locking" column="Locking" />
      <result property="OrderId" column="OrderId" />
      <result property="Status" column="Status" />
      <result property="Remark" column="Remark" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
  </resultMaps>
  <statements>
    <insert id="proc_Application_Insert" parameterClass="ApplicationInfo" >
      INSERT INTO tb_Application
      (
        Id,
        AccountId,
        ParentId,
        Code,
        ApplicationName,
        ApplicationDisplayName,
        ApplicationKey,
        ApplicationSecret,
        PinYin,
        Description,
        AdministratorEmail
        IconPath,
        BigIconPath,
        HelpUrl,
        LicenseStatus,
        Hidden,
        Locking,
        OrderId,
        Status,
        Remark,
        ModifiedDate,
        CreatedDate
      )
      VALUES
      (
        #Id#,
        #AccountId#,
        #ParentId#,
        #Code#,
        #ApplicationName#,
        #ApplicationDisplayName#,
        #ApplicationKey#,
        #ApplicationSecret#,
        #PinYin#,
        #Description#,
        #AdministratorEmail#
        #IconPath#,
        #BigIconPath#,
        #HelpUrl#,
        #LicenseStatus#,
        #Hidden#,
        #Locking#,
        #OrderId#,
        #Status#,
        #Remark#,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
      )
    </insert>
    <update id="proc_Application_Update" parameterClass="ApplicationInfo" >
      UPDATE tb_Application SET

        ParentId = #ParentId#,
        Code = #Code#,
        ApplicationName = #ApplicationName#,
        ApplicationDisplayName = #ApplicationDisplayName#,
        ApplicationKey = #ApplicationKey#,
        ApplicationSecret = #ApplicationSecret#,
        PinYin = #PinYin#,
        Description = #Description#,
        AdministratorEmail = #AdministratorEmail#,
        IconPath = #IconPath#,
        BigIconPath = #BigIconPath#,
        HelpUrl = #HelpUrl#,
        LicenseStatus = #LicenseStatus#,
        Hidden = #Hidden#,
        Locking = #Locking#,
        OrderId = #OrderId#,
        Status = #Status#,
        Remark = #Remark#,
        ModifiedDate = CURRENT_TIMESTAMP

      WHERE Id = #Id# AND ModifiedDate = #ModifiedDate#
    </update>
    <!--
        <update id="proc_Application_Sync_HasChildren" >
            CREATE TEMPORARY TABLE tmp (Id VARCHAR(36) PRIMARY KEY, ParentId VARCHAR(36), Status INT);

            INSERT INTO tmp SELECT Id, ParentId, Status FROM tb_Application;

            UPDATE tb_Application SET HasChildren = (
	            SELECT CASE COUNT(Id) WHEN  0 THEN 0 ELSE 1 END
	            FROM tmp WHERE tmp.ParentId = tb_Application.Id AND tmp.Status = 1) ;

            DROP TEMPORARY TABLE tmp;
        </update>
        -->
    <delete id="proc_Application_Delete">
      DELETE FROM tb_Application WHERE $WhereClause$
    </delete>
    <select id="proc_Application_FindOne" parameterClass="ApplicationInfo" resultMap="proc_Application_FindOne_Result" >
      SELECT * FROM tb_Application WHERE Id = #Id#
    </select>
    <select id="proc_Application_FindOneByApplicationName" parameterClass="ApplicationInfo" resultMap="proc_Application_FindOne_Result" >
      SELECT * FROM tb_Application WHERE ApplicationName = #ApplicationName#
    </select>
    <select id="proc_Application_FindAll#MySql" resultMap="proc_Application_FindAll_Result" >
      SELECT * FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>

      <dynamic prepend="LIMIT">
        <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
          0,$Length$
        </isNotEqual>
      </dynamic>
    </select>
    <select id="proc_Application_FindAll#Oracle" resultMap="proc_Application_FindAll_Result" >
      SELECT * FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
        <isNotEqual prepend="AND" property="Length" compareValue = "0">
          ROWNUM &lt;= $Length$
        </isNotEqual>
      </dynamic>
      
      <dynamic prepend="ORDER BY">
        <isNotEmpty prepend="AND" property="OrderBy" >
          $OrderBy$
        </isNotEmpty>
      </dynamic>
    </select>
    <select id="proc_Application_FindAll#SqlServer" resultMap="proc_Application_FindAll_Result" >
      SELECT

      <dynamic prepend="TOP">
        <isNotEqual prepend="TOP" property="Length" compareValue = "0">
          $Length$
        </isNotEqual>
      </dynamic>

      * FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Application_GetPaging#MySql" resultMap="proc_Application_FindAll_Result" >
      SELECT * FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>

      <dynamic prepend="ORDER BY">
        <isNotEmpty prepend="AND" property="OrderBy" >
          $OrderBy$
        </isNotEmpty>
      </dynamic>

      LIMIT $StartIndex$, $PageSize$
    </select>
    <select id="proc_Application_GetPaging#Oracle" resultMap="proc_Application_FindAll_Result" >
    SELECT T2.* FROM (   
      SELECT ROWNUM RowIndex, T1.* FROM (   
        SELECT * FROM tb_Application T

          <dynamic prepend="WHERE">
            <isParameterPresent>
              <isNotEmpty prepend="AND" property="WhereClause" >
                $WhereClause$
              </isNotEmpty>
            </isParameterPresent>
          </dynamic>

          ORDER BY $OrderBy$
      
            ) T1 WHERE ROWNUM &lt;= ($StartIndex$ + $PageSize$)
    ) T2 WHERE T2.RowIndex &gt; $StartIndex$
    </select>
    <select id="proc_Application_GetPaging#SqlServer" resultMap="proc_Application_FindAll_Result" >
      SELECT *

      FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

      FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>) TableIndex

      WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
    </select>
    <select id="proc_Application_GetRowCount" >
      SELECT COUNT(0) AS "RowCount" FROM tb_Application T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Application_IsExist" >
      SELECT COUNT(*) AS "Count" FROM tb_Application T WHERE $WhereClause$
    </select>
    <select id="proc_Application_HasAuthority" >
      SELECT COUNT(*) AS "Count" FROM view_AuthObject_Account View1, tb_Application_Scope Scope
      WHERE
        View1.AccountId = #AccountId#
        AND View1.AuthorizationObjectId = Scope.AuthorizationObjectId
        AND View1.AuthorizationObjectType = Scope.AuthorizationObjectType
        AND Scope.AuthorityId = #AuthorityId#
        AND Scope.ApplicationId = #ApplicationId#
    </select>
    <insert id="proc_Application_AddAuthorizationScopeObject">
      INSERT INTO tb_Application_Scope
        (AuthorizationObjectType, AuthorizationObjectId, AuthorityId, ApplicationId, ModifiedDate, CreatedDate)

      VALUES
        (#AuthorizationObjectType#, #AuthorizationObjectId#, #AuthorityId#, #ApplicationId#, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>
    <delete id="proc_Application_RemoveAuthorizationScopeObjects">
      DELETE FROM tb_Application_Scope WHERE ApplicationId = #ApplicationId# AND AuthorityId = #AuthorityId#
    </delete>
    <select id="proc_Application_GetAuthorizationScopeObjects" >
      SELECT * FROM tb_Application_Scope T WHERE ApplicationId = #ApplicationId# AND AuthorityId = #AuthorityId#
    </select>
    <insert id="proc_Application_SyncFromPackPage" parameterClass="ApplicationInfo" >
      IF EXISTS(SELECT 0 FROM tb_Application WHERE Id = #Id#)
      BEGIN
        UPDATE tb_Application SET

          ParentId = #ParentId#,
          Code = #Code#,
          ApplicationName = #ApplicationName#,
          ApplicationDisplayName = #ApplicationDisplayName#,
          ModifiedDate = CURRENT_TIMESTAMP

        WHERE Id = #Id#
      END
      ELSE
      BEGIN
        INSERT INTO tb_Application
        (
          Id,
          AccountId,
          ParentId,
          Code,
          ApplicationName,
          ApplicationDisplayName,
          ApplicationKey,
          ApplicationSecret,
          PinYin,
          Description,
          AdministratorEmail,
          IconPath,
          BigIconPath,
          HelpUrl,
          LicenseStatus,
          Hidden,
          Locking,
          OrderId,
          Status,
          Remark,
          ModifiedDate,
          CreatedDate
        )
        VALUES
        (
          #Id#,
          #AccountId#,
          #ParentId#,
          #Code#,
          #ApplicationName#,
          #ApplicationDisplayName#,
          #ApplicationKey#,
          #ApplicationSecret#,
          #PinYin#,
          #Description#,
          #AdministratorEmail#,
          #IconPath#,
          #BigIconPath#,
          #HelpUrl#,
          #LicenseStatus#,
          #Hidden#,
          #Locking#,
          #OrderId#,
          #Status#,
          #Remark#,
          CURRENT_TIMESTAMP,
          CURRENT_TIMESTAMP
        )
      END
    </insert>
  </statements>
</sqlMap>
