<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Apps.DAL.IBatis.ApplicationFeatureDateLimitProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
	<alias>
		<typeAlias alias="ApplicationFeatureDateLimitInfo" type="X3Platform.Apps.Model.ApplicationFeatureDateLimitInfo,X3Platform.Apps" />
	</alias>
	<resultMaps>
		<resultMap id="proc_Application_FeatureDateLimit_FindOne_Result" class="ApplicationFeatureDateLimitInfo">
			<result property="Id" column="Id" />
			<result property="BeginDate" column="BeginDate" />
			<result property="EndDate" column="EndDate" />
			<result property="Status" column="Status" />
			<result property="Remark" column="Remark" />
			<result property="ModifiedDate" column="ModifiedDate" />
			<result property="CreatedDate" column="CreatedDate" />
		</resultMap>
		<resultMap id="proc_Application_FeatureDateLimit_FindAll_Result" class="ApplicationFeatureDateLimitInfo">
			<result property="Id" column="Id" />
			<result property="BeginDate" column="BeginDate" />
			<result property="EndDate" column="EndDate" />
			<result property="Status" column="Status" />
			<result property="Remark" column="Remark" />
			<result property="ModifiedDate" column="ModifiedDate" />
			<result property="CreatedDate" column="CreatedDate" />
		</resultMap>
	</resultMaps>
	<statements>
		<insert id="proc_Application_FeatureDateLimit_Insert" parameterClass="ApplicationFeatureDateLimitInfo">
			INSERT INTO tb_Application_FeatureDateLimit
			(
				Id,
				BeginDate,
				EndDate,
				Status,
				Remark,
				ModifiedDate,
				CreatedDate
			)
			VALUES
			(
				#Id#,
				#BeginDate#,
				#EndDate#,
				#Status#,
				#Remark#,
				#ModifiedDate#,
				#CreatedDate#
			)
		</insert>

		<update id="proc_Application_FeatureDateLimit_Update" parameterClass="ApplicationFeatureDateLimitInfo">
			UPDATE tb_Application_FeatureDateLimit SET

				Id = #Id#,
				BeginDate = #BeginDate#,
				EndDate = #EndDate#,
				Status = #Status#,
				Remark = #Remark#,
				ModifiedDate = #ModifiedDate#,
				CreatedDate = #CreatedDate#

			WHERE Id = #Id#
		</update>

		<update id="proc_Application_FeatureDateLimit_Delete" >
			UPDATE tb_Application_FeatureDateLimit SET Status = 0 WHERE $WhereClause$
		</update>

		<delete id="proc_Application_FeatureDateLimit_Delete(PhysicallyRemoved)" >
			DELETE FROM tb_Application_FeatureDateLimit WHERE $WhereClause$
		</delete>

		<update id="proc_Application_FeatureDateLimit_Delete(VirtualRemoved)" >
			UPDATE tb_Application_FeatureDateLimit SET Status = 0 WHERE $WhereClause$
		</update>

		<select id="proc_Application_FeatureDateLimit_FindOne" resultMap="proc_Application_FeatureDateLimit_FindOne_Result" >
			SELECT * FROM tb_Application_FeatureDateLimit T WHERE Id = #Id#
		</select>

		<select id="proc_Application_FeatureDateLimit_FindAll" resultMap="proc_Application_FeatureDateLimit_FindAll_Result" >
			SELECT

			<dynamic prepend="TOP">
				<isNotEqual prepend="TOP" property="Length" compareValue = "0">
					$Length$
				</isNotEqual>
			</dynamic>

			* FROM tb_Application_FeatureDateLimit T

			  <dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			  </dynamic>
		</select>

		<select id="proc_Application_FeatureDateLimit_GetPages" resultMap="proc_Application_FeatureDateLimit_FindAll_Result" >
			SELECT *

			FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

				FROM tb_Application_FeatureDateLimit T

				<dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
				</dynamic>) TableIndex

			WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
		</select>

        <!-- SQL Server 2000 -->
		<select id="proc_Application_FeatureDateLimit_GetPages(SQLServer2000)" resultMap="proc_Application_FeatureDateLimit_FindAll_Result" >
			SELECT TOP $PageSize$ *

			FROM tb_Application_FeatureDateLimit T

			WHERE Id NOT IN (
				SELECT TOP $StartIndex$ Id FROM tb_Application_FeatureDateLimit T
				<dynamic prepend="WHERE">
					<isParameterPresent>
						<isNotEmpty prepend="AND" property="WhereClause" >
						$WhereClause$
						</isNotEmpty>
					</isParameterPresent>
				</dynamic> ORDER BY $OrderBy$ )

			<dynamic prepend="AND">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			</dynamic>
			ORDER BY $OrderBy$
		</select>

        <!-- SQL Server 2005 / SQL Server 2008 (默认) -->
		<select id="proc_Application_FeatureDateLimit_GetPages(SQLServer2008)" resultMap="proc_Application_FeatureDateLimit_FindAll_Result" >
			SELECT *

			FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

				FROM tb_Application_FeatureDateLimit T

				<dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
				</dynamic>) TableIndex

			WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
		</select>

		<select id="proc_Application_FeatureDateLimit_GetRowCount" >
			SELECT COUNT(0) AS "RowCount" FROM tb_Application_FeatureDateLimit T

			<dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
			</dynamic>
		</select>

		<select id="proc_Application_FeatureDateLimit_IsExist" >
			SELECT COUNT(0) AS "Count" FROM tb_Application_FeatureDateLimit T WHERE $WhereClause$
		</select>
	</statements>
</sqlMap>
