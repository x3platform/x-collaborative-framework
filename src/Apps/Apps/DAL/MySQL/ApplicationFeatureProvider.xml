<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Apps.DAL.IBatis.ApplicationFeatureProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="ApplicationFeatureInfo" type="X3Platform.Apps.Model.ApplicationFeatureInfo,X3Platform.Apps" />
    </alias>
    <resultMaps>
        <resultMap id="proc_Application_Feature_FindOne_Result" class="ApplicationFeatureInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="ParentId" column="ParentId" />
            <result property="Code" column="Code" />
            <result property="Name" column="Name" />
            <result property="DisplayName" column="DisplayName" />
            <result property="Type" column="Type" />
            <result property="Url" column="Url" />
            <result property="Target" column="Target" />
            <result property="IconPath" column="IconPath" />
            <result property="BigIconPath" column="BigIconPath" />
            <result property="HelpUrl" column="HelpUrl" />
            <result property="AuthorizationReadScopeObjectText" column="AuthorizationReadScopeObjectText" />
            <result property="Hidden" column="Hidden" />
            <result property="EffectScope" column="EffectScope" />
            <result property="Lock" column="Lock" />
            <result property="OrderId" column="OrderId" />
            <result property="Status" column="Status" />
            <result property="Remark" column="Remark" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
        <resultMap id="proc_Application_Feature_FindAll_Result" class="ApplicationFeatureInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="ParentId" column="ParentId" />
            <result property="Code" column="Code" />
            <result property="Name" column="Name" />
            <result property="DisplayName" column="DisplayName" />
            <result property="Type" column="Type" />
            <result property="Url" column="Url" />
            <result property="Target" column="Target" />
            <result property="IconPath" column="IconPath" />
            <result property="BigIconPath" column="BigIconPath" />
            <result property="HelpUrl" column="HelpUrl" />
            <result property="AuthorizationReadScopeObjectText" column="AuthorizationReadScopeObjectText" />
            <result property="Hidden" column="Hidden" />
            <result property="EffectScope" column="EffectScope" />
            <result property="Lock" column="Lock" />
            <result property="OrderId" column="OrderId" />
            <result property="Status" column="Status" />
            <result property="Remark" column="Remark" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
    </resultMaps>
    <statements>

        <insert id="proc_Application_Feature_Insert" parameterClass="ApplicationFeatureInfo">
            INSERT INTO `tb_Application_Feature` 
            (
                `Id`,
                `ApplicationId`,
                `ParentId`,
                `Code`,
                `Name`,
                `DisplayName`,
                `Type`,
                `Url`,
                `IconPath`,
                `BigIconPath`,
                `HelpUrl`,
                `Lock`,
                `Hidden`,
                `OrderId`,
                `Status`,
                `Remark`,
                `UpdateDate`,
                `CreateDate`
            )
            VALUES
            (
                #Id#,
                #ApplicationId#,
                #ParentId#,
                #Code#,
                #Name#,
                #DisplayName#,
                #Type#,
                #Url#,
                #IconPath#,
                #BigIconPath#,
                #HelpUrl#,
                #Lock#,
                #Hidden#,
                #OrderId#,
                #Status#,
                #Remark#,
                CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP
            )
        </insert>

        <update id="proc_Application_Feature_Update" parameterClass="ApplicationFeatureInfo">
            UPDATE `tb_Application_Feature` SET

                `ApplicationId` = #ApplicationId#,
                `ParentId` = #ParentId#,
                `Code` = #Code#,
                `Name` = #Name#,
                `DisplayName` = #DisplayName#,
                `Type` = #Type#,
                `Url` = #Url#,
                `IconPath` = #IconPath#,
                `BigIconPath` = #BigIconPath#,
                `HelpUrl` = #HelpUrl#,
                `Lock` = #Lock#,
                `Hidden` = #Hidden#,
                `OrderId` = #OrderId#,
                `Status` = #Status#,
                `Remark` = #Remark#,
                `UpdateDate` = CURRENT_TIMESTAMP

            WHERE `Id` = #Id# AND `UpdateDate` = #UpdateDate#
        </update>

        <delete id="proc_Application_Feature_Delete" >
            DELETE FROM `tb_Application_Feature` WHERE $WhereClause$
        </delete>

        <select id="proc_Application_Feature_FindOne" resultMap="proc_Application_Feature_FindOne_Result" >
            SELECT * FROM `tb_Application_Feature` T WHERE `Id` = #Id#
        </select>

        <select id="proc_Application_Feature_FindAll" resultMap="proc_Application_Feature_FindAll_Result" >
            SELECT * FROM `tb_Application_Feature` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
            
            <dynamic prepend="LIMIT">
                <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
                    0,$Length$
                </isNotEqual>
            </dynamic>
        </select>

        <select id="proc_Application_Feature_GetPages" resultMap="proc_Application_Feature_FindAll_Result" >
            SELECT * FROM `tb_Application_Feature` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            ORDER BY $OrderBy$
            
            LIMIT $StartIndex$, $PageSize$
        </select>

        <select id="proc_Application_Feature_GetRowCount" >
            SELECT COUNT(*) AS 'RowCount' FROM `tb_Application_Feature` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_Application_Feature_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM `tb_Application_Feature` T WHERE $WhereClause$
        </select>

        <select id="proc_Application_Feature_Scope_GetRelations" >
            SELECT
                Id,
                ApplicationId,
                ParentId,
                Code,
                Name,
                DisplayName,
                `Type`,
                ISNULL( AuthorizationObjectType,'') as 'AuthorizationObjectType',
                ISNULL( AuthorizationObjectId, '') as 'AuthorizationObjectId',
                CASE ISNULL(AuthorizationObjectId,'') WHEN '' THEN 0 ELSE 1 END AS 'Authorized'
            FROM `tb_Application_Feature` 
                LEFT JOIN tb_Application_Feature_Scope ON tb_Application_Feature_Scope.EntityId = tb_Application_Feature.Id
                    AND tb_Application_Feature_Scope.AuthorizationObjectType = '$AuthorizationObjectType$'
                    AND tb_Application_Feature_Scope.AuthorizationObjectId = '$AuthorizationObjectId$'
            WHERE tb_Application_Feature.ApplicationId = '$ApplicationId$' AND `Status` = 1
        </select>

        <insert id="proc_Application_Feature_Scope_AddRelation" >
            INSERT INTO tb_Application_Feature_Scope
            (
                EntityId,
                EntityClassName,
                AuthorityId,
                AuthorizationObjectType,
                AuthorizationObjectId
            )
            VALUES
            (
                '$EntityId$',
                '$EntityClassName$',
                '$AuthorityId$',
                '$AuthorizationObjectType$',
                '$AuthorizationObjectId$'
            )
        </insert>

        <delete id="proc_Application_Feature_Scope_RemoveRelation" >
            DELETE FROM tb_Application_Feature_Scope
            WHERE EntityId IN ( SELECT Id FROM tb_Application_Feature WHERE ApplicationId = '$ApplicationId$' )
                AND EntityClassName = '$EntityClassName$'
                AND AuthorityId = '$AuthorityId$'
                AND AuthorizationObjectType = '$AuthorizationObjectType$'
                AND AuthorizationObjectId = '$AuthorizationObjectId$'
        </delete>

        <insert id="proc_Application_Feature_SyncFromPackPage" parameterClass="ApplicationFeatureInfo" >
            IF EXISTS(SELECT 0 FROM `tb_Application_Feature` WHERE `Id` = #Id#)
            BEGIN
                UPDATE `tb_Application_Feature` SET

                    `Id` = #Id#,
                    `ApplicationId` = #ApplicationId#,
                    `ParentId` = #ParentId#,
                    `Code` = #Code#,
                    `Name` = #Name#,
                    `Type` = #Type#,
                    `OrderId` = #OrderId#,
                    `Status` = #Status#,
                    `Remark` = #Remark#,
                    `UpdateDate` = CURRENT_TIMESTAMP
                WHERE `Id` = #Id#
            END
            ELSE
            BEGIN
                INSERT INTO `tb_Application_Feature` 
                (
                    `Id`,
                    `ApplicationId`,
                    `ParentId`,
                    `Code`,
                    `Name`,
                    `Type`,
                    `OrderId`,
                    `Status`,
                    `Remark`,
                    `UpdateDate`,
                    `CreateDate`
                )
                VALUES
                (
                    #Id#,
                    #ApplicationId#,
                    #ParentId#,
                    #Code#,
                    #Name#,
                    #Type#,
                    #OrderId#,
                    #Status#,
                    #Remark#,
                    CURRENT_TIMESTAMP,
                    CURRENT_TIMESTAMP
                )
            END
        </insert>
    </statements>
</sqlMap>
