<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Apps.DAL.IBatis.ApplicationSettingGroupProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="ApplicationSettingGroupInfo" type="X3Platform.Apps.Model.ApplicationSettingGroupInfo,X3Platform.Apps" />
    </alias>
    <resultMaps>
        <resultMap id="proc_Application_SettingGroup_FindOne_Result" class="ApplicationSettingGroupInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="ParentId" column="ParentId" />
            <result property="Code" column="Code" />
            <result property="Name" column="Name" />
            <result property="DisplayName" column="DisplayName" />
            <result property="ContentType" column="ContentType" />
            <result property="OrderId" column="OrderId" />
            <result property="Status" column="Status" />
            <result property="Remark" column="Remark" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
        <resultMap id="proc_Application_SettingGroup_FindAll_Result" class="ApplicationSettingGroupInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="ParentId" column="ParentId" />
            <result property="Code" column="Code" />
            <result property="Name" column="Name" />
            <result property="DisplayName" column="DisplayName" />
            <result property="ContentType" column="ContentType" />
            <result property="OrderId" column="OrderId" />
            <result property="Status" column="Status" />
            <result property="Remark" column="Remark" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
    </resultMaps>
    <statements>

        <insert id="proc_Application_SettingGroup_Insert" parameterClass="ApplicationSettingGroupInfo">
            INSERT INTO `tb_Application_SettingGroup` 
            (
                `Id`,
                `ApplicationId`,
                `ParentId`,
                `Code`,
                `Name`,
                `DisplayName`,
                `ContentType`,
                `OrderId`,
                `Status`,
                `Remark`,
                `UpdateDate`,
                `CreateDate`
            )
            VALUES
            (
                #Id#,
                #ApplicationId#,
                #ParentId#,
                #Code#,
                #Name#,
                #DisplayName#,
                #ContentType#,
                #OrderId#,
                #Status#,
                #Remark#,
                Now(),
                Now()
            )
        </insert>

        <update id="proc_Application_SettingGroup_Update" parameterClass="ApplicationSettingGroupInfo">
            UPDATE `tb_Application_SettingGroup` SET

            `ApplicationId` = #ApplicationId#,
            `ParentId` = #ParentId#,
            `Code` = #Code#,
            `Name` = #Name#,
            `DisplayName` = #DisplayName#,
            `ContentType` = #ContentType#,
            `OrderId` = #OrderId#,
            `Status` = #Status#,
            `Remark` = #Remark#,
            `UpdateDate` = Now()

            WHERE `Id` = #Id# AND `UpdateDate` = #UpdateDate#
        </update>

        <delete id="proc_Application_SettingGroup_Delete" >
            DELETE FROM `tb_Application_SettingGroup` WHERE $WhereClause$
        </delete>

        <select id="proc_Application_SettingGroup_FindOne" resultMap="proc_Application_SettingGroup_FindOne_Result" >
            SELECT * FROM `tb_Application_SettingGroup` WHERE `Id` = #Id#
        </select>

        <select id="proc_Application_SettingGroup_FindAll" resultMap="proc_Application_SettingGroup_FindAll_Result" >
            SELECT * FROM `tb_Application_SettingGroup` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
            
            <dynamic prepend="LIMIT">
                <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
                    0,$Length$
                </isNotEqual>
            </dynamic>
        </select>

        <select id="proc_Application_SettingGroup_GetPages" resultMap="proc_Application_SettingGroup_FindAll_Result" >
            SELECT * FROM `tb_Application_SettingGroup` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            ORDER BY $OrderBy$
            
            LIMIT $StartIndex$, $PageSize$
        </select>

        <select id="proc_Application_SettingGroup_GetRowCount" >
            SELECT COUNT(*) AS 'RowCount' FROM `tb_Application_SettingGroup` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_Application_SettingGroup_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM `tb_Application_SettingGroup` T WHERE $WhereClause$
        </select>

        <insert id="proc_Application_SettingGroup_SyncFromPackPage" parameterClass="ApplicationSettingGroupInfo" >
            IF EXISTS(SELECT 0 FROM `tb_Application_SettingGroup` WHERE `Id` = #Id#)
            BEGIN
                UPDATE `tb_Application_SettingGroup` SET

                    `ApplicationId` = #ApplicationId#,
                    `ParentId` = #ParentId#,
                    `Code` = #Code#,
                    `Name` = #Name#,
                    `DisplayName` = #DisplayName#,
                    `ContentType` = #ContentType#,
                    `OrderId` = #OrderId#,
                    `Status` = #Status#,
                    `Remark` = #Remark#,
                    `UpdateDate` = Now()

                WHERE `Id` = #Id#
            END
            ELSE
            BEGIN
                INSERT INTO `tb_Application_SettingGroup` 
                (
                    `Id`,
                    `ApplicationId`,
                    `ParentId`,
                    `Code`,
                    `Name`,
                    `DisplayName`,
                    `ContentType`,
                    `OrderId`,
                    `Status`,
                    `Remark`,
                    `UpdateDate`,
                    `CreateDate`
                )
                VALUES
                (
                    #Id#,
                    #ApplicationId#,
                    #ParentId#,
                    #Code#,
                    #Name#,
                    #DisplayName#,
                    #ContentType#,
                    #OrderId#,
                    #Status#,
                    #Remark#,
                    Now(),
                    Now()
                )
            END
        </insert>

    </statements>
</sqlMap>
