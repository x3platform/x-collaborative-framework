// =============================================================================
//
// Copyright (c) 2007 X3Platform
//
// FileName     :
//
// Description  :
//
// Author       :X3Platform
//
// Date         :2007-07-08
//
// =============================================================================

namespace X3Platform.DigitalNumber.IDAL
{
    using System.Collections.Generic;


    using X3Platform.DigitalNumber.Model;
    using X3Platform.Spring;

    /// <summary></summary>
    [SpringObject("X3Platform.DigitalNumber.IDAL.IDigitalNumberProvider")]
    public interface IDigitalNumberProvider
    {
        //-------------------------------------------------------
        // 保存 添加 修改 删除
        //-------------------------------------------------------

        #region 函数:Save(DigitalNumberInfo param)
        /// <summary>保存记录</summary>
        /// <param name="param"> 实例<see cref="NotepadInfo"/>详细信息</param>
        /// <returns>NotepadInfo 实例详细信息</returns>
        DigitalNumberInfo Save(DigitalNumberInfo param);
        #endregion

        #region 函数:Insert(DigitalNumberInfo param)
        /// <summary>添加记录</summary>
        /// <param name="param">NotepadInfo 实例的详细信息</param>
        void Insert(DigitalNumberInfo param);
        #endregion

        #region 函数:Update(DigitalNumberInfo param)
        /// <summary>修改记录</summary>
        /// <param name="param">NotepadInfo 实例的详细信息</param>
        void Update(DigitalNumberInfo param);
        #endregion

        #region 函数:Delete(string ids)
        /// <summary>删除记录</summary>
        /// <param name="ids">实例的标识信息,多个以逗号分开.</param>
        void Delete(string ids);
        #endregion

        //-------------------------------------------------------
        // 查询
        //-------------------------------------------------------

        #region 函数:FindOne(string name)
        /// <summary>查询某条记录</summary>
        /// <param name="name">DigitalNumberInfo Id号</param>
        /// <returns>返回一个 DigitalNumberInfo 实例的详细信息</returns>
        DigitalNumberInfo FindOne(string name);
        #endregion

        #region 函数:FindAll(string whereClause,int length)
        /// <summary>查询所有相关记录</summary>
        /// <param name="whereClause">SQL 查询条件</param>
        /// <param name="length">条数</param>
        /// <returns>返回所有实例的详细信息</returns>
        IList<DigitalNumberInfo> FindAll(string whereClause, int length);
        #endregion

        //-------------------------------------------------------
        // 自定义功能
        //-------------------------------------------------------

        #region 函数:GetPages(int startIndex, int pageSize, string whereClause, string orderBy, out int rowCount)
        /// <summary>分页函数</summary>

        /// <returns>返回一个列表</returns> 
        IList<DigitalNumberInfo> GetPages(int startIndex, int pageSize, string whereClause, string orderBy, out int rowCount);
        #endregion

        #region 函数:IsExistName(string name)
        /// <summary>查询是否存在相关的记录.</summary>
        /// <param name="name">名称</param>
        /// <returns>布尔值</returns>
        bool IsExistName(string name);
        #endregion
    }
}
