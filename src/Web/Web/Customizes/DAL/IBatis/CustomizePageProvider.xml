<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Web.Customizes.DAL.IBatis.CustomizeWidgetInstanceProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="CustomizePageInfo" type="X3Platform.Web.Customizes.Model.CustomizePageInfo,X3Platform.Web" />
  </alias>
  <resultMaps>
    <resultMap id="proc_Customize_Page_FindOne_Result" class="CustomizePageInfo">
      <result property="Id" column="Id" />
      <result property="AuthorizationObjectType" column="AuthorizationObjectType" />
      <result property="AuthorizationObjectId" column="AuthorizationObjectId" />
      <result property="AuthorizationObjectName" column="AuthorizationObjectName" />
      <result property="Name" column="Name" />
      <result property="Title" column="Title" />
      <result property="Html" column="Html" />
      <result property="Status" column="Status" />
      <result property="UpdateDate" column="UpdateDate" />
      <result property="CreateDate" column="CreateDate" />
    </resultMap>
    <resultMap id="proc_Customize_Page_FindAll_Result" class="CustomizePageInfo">
      <result property="Id" column="Id" />
      <result property="AuthorizationObjectType" column="AuthorizationObjectType" />
      <result property="AuthorizationObjectId" column="AuthorizationObjectId" />
      <result property="AuthorizationObjectName" column="AuthorizationObjectName" />
      <result property="Name" column="Name" />
      <result property="Title" column="Title" />
      <result property="Status" column="Status" />
      <result property="UpdateDate" column="UpdateDate" />
      <result property="CreateDate" column="CreateDate" />
    </resultMap>
  </resultMaps>
  <statements>
    <insert id="proc_Customize_Page_Insert" parameterClass="CustomizePageInfo" >
      INSERT INTO tb_Customize_Page
      (
        Id,
        AuthorizationObjectType,
        AuthorizationObjectId,
        AuthorizationObjectName,
        Name,
        Title,
        Html,
        Status,
        UpdateDate,
        CreateDate
      )
      VALUES
      (
        #Id#,
        #AuthorizationObjectType#,
        #AuthorizationObjectId#,
        #AuthorizationObjectName#,
        #Name#,
        #Title#,
        #Html#,
        #Status#,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
      )
    </insert>
    <update id="proc_Customize_Page_Update" parameterClass="CustomizePageInfo" >
      UPDATE tb_Customize_Page SET
        
        AuthorizationObjectType = #AuthorizationObjectType#,
        AuthorizationObjectId = #AuthorizationObjectId#, 
        Name = #Name#,
        Title = #Title#,
        Html = #Html#,
        Status = #Status#,
        UpdateDate = CURRENT_TIMESTAMP

      WHERE Id = #Id#
    </update>
    <delete id="proc_Customize_Page_Delete">
      DELETE FROM tb_Customize_Page WHERE $WhereClause$
    </delete>
    <select id="proc_Customize_Page_FindOne" parameterClass="CustomizePageInfo" resultMap="proc_Customize_Page_FindOne_Result" >
      SELECT * FROM tb_Customize_Page WHERE Id = #Id#
    </select>
    <select id="proc_Customize_Page_FindOneByName" parameterClass="CustomizePageInfo" resultMap="proc_Customize_Page_FindOne_Result" >
      SELECT * FROM tb_Customize_Page WHERE AuthorizationObjectType = #AuthorizationObjectType# AND AuthorizationObjectId = #AuthorizationObjectId# AND Name = #Name#
    </select>
    <select id="proc_Customize_Page_FindAll" resultMap="proc_Customize_Page_FindAll_Result" parameterClass="CustomizePageInfo" >
      SELECT

      <dynamic prepend="TOP">
        <isNotEqual prepend="TOP" property="Length" compareValue = "0">
          $Length$
        </isNotEqual>
      </dynamic>

      * FROM tb_Customize_Page

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Customize_Page_GetPaging#MySql" parameterClass="CustomizePageInfo" resultMap="proc_Customize_Page_FindAll_Result" >
      SELECT * FROM tb_Customize_Page T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>

      ORDER BY $OrderBy$

      LIMIT $StartIndex$, $PageSize$
    </select>
    <select id="proc_Customize_Page_GetPaging#SqlServer" parameterClass="CustomizePageInfo" resultMap="proc_Customize_Page_FindAll_Result" >
      SELECT *

      FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

      FROM tb_Customize_Page T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>) TableIndex

      WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
    </select>
    <select id="proc_Customize_Page_GetRowCount" >
      SELECT COUNT(*) AS 'RowCount' FROM tb_Customize_Page T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Customize_Page_IsExist" >
      SELECT COUNT(*) AS 'Count' FROM tb_Customize_Page T WHERE $WhereClause$
    </select>
    <select id="proc_Customize_Page_GetHtml" resultMap="proc_Customize_Page_FindOne_Result" >
      SELECT * FROM tb_Customize_Page WHERE $WhereClause$
    </select>
  </statements>
</sqlMap>