<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Entities.DAL.IBatis.EntityDraftProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
	<alias>
		<typeAlias alias="EntityDraftInfo" type="X3Platform.Entities.Model.EntityDraftInfo, X3Platform.Entities" />
	</alias>
	<resultMaps>
		<resultMap id="proc_Entity_Draft_FindOne_Result" class="EntityDraftInfo">
			<result property="Id" column="Id" />
			<result property="EntityId" column="EntityId" />
			<result property="EntityClassName" column="EntityClassName" />
			<result property="OriginalEntityId" column="OriginalEntityId" />
			<result property="Date" column="Date" />
		</resultMap>
		<resultMap id="proc_Entity_Draft_FindAll_Result" class="EntityDraftInfo">
			<result property="Id" column="Id" />
			<result property="EntityId" column="EntityId" />
			<result property="EntityClassName" column="EntityClassName" />
			<result property="OriginalEntityId" column="OriginalEntityId" />
			<result property="Date" column="Date" />
		</resultMap>
	</resultMaps>
	<statements>

		<insert id="proc_Entity_Draft_Insert" parameterClass="EntityDraftInfo">
			INSERT INTO tb_Entity_Draft 
            (
				Id,
				EntityId,
				EntityClassName,
				OriginalEntityId,
				Date
			)
			VALUES
			(
				#Id#,
				#EntityId#,
				#EntityClassName#,
				#OriginalEntityId#,
				#Date#
			)
		</insert>

		<update id="proc_Entity_Draft_Update" parameterClass="EntityDraftInfo">
			UPDATE tb_Entity_Draft SET

					Id = #Id#,
					EntityId = #EntityId#,
					EntityClassName = #EntityClassName#,
					OriginalEntityId = #OriginalEntityId#,
					Date = #Date#

				WHERE Id = #Id#
		</update>

		<delete id="proc_Entity_Draft_Delete" >
			DELETE FROM tb_Entity_Draft WHERE $WhereClause$
		</delete>

		<select id="proc_Entity_Draft_FindOne" resultMap="proc_Entity_Draft_FindOne_Result" >
			SELECT * FROM tb_Entity_Draft T
				WHERE Id = #Id#
		</select>

		<select id="proc_Entity_Draft_FindAll" resultMap="proc_Entity_Draft_FindAll_Result" >
			SELECT

			<dynamic prepend="TOP">
				<isNotEqual prepend="TOP" property="Length" compareValue = "0">
					$Length$
				</isNotEqual>
			</dynamic>

			* FROM tb_Entity_Draft T

			  <dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			  </dynamic>
		</select>

		<select id="proc_Entity_Draft_GetPages" resultMap="proc_Entity_Draft_FindAll_Result" >
		  SELECT *

		  FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

		  FROM tb_Entity_Draft T

		  <dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
		  </dynamic>) TableIndex

		  WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$

		</select>

		<select id="proc_Entity_Draft_GetRowCount" >

		  SELECT COUNT(*) AS 'RowCount' FROM tb_Entity_Draft T

		  <dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
		  </dynamic>
		</select>

		<select id="proc_Entity_Draft_IsExist" >
			SELECT COUNT(0) AS 'Count' FROM tb_Entity_Draft T WHERE $WhereClause$
		</select>

	</statements>
</sqlMap>
