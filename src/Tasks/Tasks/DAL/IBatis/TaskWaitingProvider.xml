<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Tasks.DAL.IBatis.TaskWaitingProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="TaskWaitingInfo" type="X3Platform.Tasks.Model.TaskWaitingInfo,X3Platform.Tasks" />
    </alias>
    <resultMaps>
        <resultMap id="proc_TaskWaiting_FindOne_Result" class="TaskWaitingInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="TaskCode" column="TaskCode" />
            <result property="Type" column="Type" />
            <result property="Title" column="Title" />
            <result property="Content" column="Content" />
            <result property="Tags" column="Tags" />
            <result property="SenderId" column="SenderId" />
            <result property="TriggerTime" column="TriggerTime" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
        <resultMap id="proc_TaskWaiting_FindAll_Result" class="X3Platform.Tasks.Model.TaskWaitingItemInfo,X3Platform.Tasks">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="TaskCode" column="TaskCode" />
            <result property="Type" column="Type" />
            <result property="Title" column="Title" />
            <result property="Content" column="Content" />
            <result property="Tags" column="Tags" />
            <result property="SenderId" column="SenderId" />
            <result property="ReceiverId" column="ReceiverId" />
            <result property="IsSend" column="IsSend" />
            <result property="SendTime" column="SendTime" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
    </resultMaps>
    <statements>
        <insert id="proc_TaskWaiting_Insert" parameterClass="TaskWaitingInfo">
            INSERT INTO tb_Task_WaitingItem 
            (
                Id,
                ApplicationId,
                TaskCode,
                Type,
                Title,
                Content,
                Tags,
                SenderId,
                TriggerTime,
                CreateDate
            )
            VALUES
            (
                #Id#,
                #ApplicationId#,
                #TaskCode#,
                #Type#,
                #Title#,
                #Content#,
                #Tags#,
                #SenderId#,
                #TriggerTime#,
                #CreateDate#
            )
        </insert>

        <update id="proc_TaskWaiting_Update" parameterClass="TaskWaitingInfo">
            UPDATE tb_Task_WaitingItem SET

                Id = #Id#,
                ApplicationId = #ApplicationId#,
                TaskCode = #TaskCode#,
                Type = #Type#,
                Title = #Title#,
                Content = #Content#,
                Tags = #Tags#,
                SenderId = #SenderId#,
                TriggerTime = #TriggerTime#,
                CreateDate = #CreateDate#

            WHERE Id = #Id#
        </update>
        
        <insert id="proc_TaskWaiting_Save" parameterClass="TaskWaitingInfo">
            IF EXISTS(SELECT 0 FROM tb_Task_WaitingItem WHERE Id = #Id#)
            BEGIN
            UPDATE tb_Task_WaitingItem SET

            Id = #Id#,
            ApplicationId = #ApplicationId#,
            TaskCode = #TaskCode#,
            Type = #Type#,
            Title = #Title#,
            Content = #Content#,
            Tags = #Tags#,
            SenderId = #SenderId#,
            TriggerTime = #TriggerTime#,
            CreateDate = #CreateDate#

            WHERE Id = #Id#
            END
            ELSE
            BEGIN
            INSERT INTO tb_Task_WaitingItem(
            Id,
            ApplicationId,
            TaskCode,
            Type,
            Title,
            Content,
            Tags,
            SenderId,
            TriggerTime,
            CreateDate
            )
            VALUES
            (
            #Id#,
            #ApplicationId#,
            #TaskCode#,
            #Type#,
            #Title#,
            #Content#,
            #Tags#,
            #SenderId#,
            #TriggerTime#,
            #CreateDate#
            )
            END
        </insert>
        
        <delete id="proc_TaskWaiting_Delete" parameterClass="TaskWaitingInfo">
            DELETE FROM tb_Task_WaitingItem WHERE Id IN ($Ids$)
        </delete>
        
        <select id="proc_TaskWaiting_FindOne" resultMap="proc_TaskWaiting_FindOne_Result" >
            SELECT * FROM tb_Task_WaitingItem T WHERE Id = #Id#
        </select>

        <select id="proc_TaskWaiting_FindOneByTaskCode" parameterClass="TaskWaitingInfo" resultMap="proc_TaskWaiting_FindOne_Result" >
            SELECT * FROM tb_Task_WaitingItem T WHERE ApplicationId = #ApplicationId# AND TaskCode = #TaskCode#
        </select>

        <select id="proc_TaskWaiting_FindAll" resultMap="proc_TaskWaiting_FindAll_Result" >
            SELECT

            <dynamic prepend="TOP">
                <isNotEqual prepend="TOP" property="Length" compareValue = "0">
                    $Length$
                </isNotEqual>
            </dynamic>

            * FROM view_Task_WaitingItem T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_TaskWaiting_GetPaging" resultMap="proc_TaskWaiting_FindAll_Result" >
            SELECT *

            FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

            FROM view_Task_WaitingItem T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>) TableIndex

            WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
        </select>

        <select id="proc_TaskWaiting_GetRowCount" >
            SELECT COUNT(*) AS 'RowCount' FROM view_Task_WaitingItem T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_TaskWaiting_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM tb_Task_WaitingItem T WHERE $WhereClause$
        </select>
    </statements>
</sqlMap>
