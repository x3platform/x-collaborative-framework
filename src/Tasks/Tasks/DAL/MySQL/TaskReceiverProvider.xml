<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Tasks.DAL.MySQL.TaskReceiverProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="TaskWorkItemInfo" type="X3Platform.Tasks.Model.TaskWorkItemInfo, X3Platform.Tasks" />
        <typeAlias alias="TaskReceiverInfo" type="X3Platform.Tasks.Model.TaskReceiverInfo, X3Platform.Tasks" />
    </alias>
    <resultMaps>
        <resultMap id="proc_Task_Receiver_FindOne_Result" class="TaskWorkItemInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="TaskCode" column="TaskCode" />
            <result property="Type" column="Type" />
            <result property="Title" column="Title" />
            <result property="Content" column="Content" />
            <result property="Tags" column="Tags" />
            <result property="SenderId" column="SenderId" />
            <result property="ReceiverId" column="ReceiverId" />
            <result property="Status" column="Status" />
            <result property="IsRead" column="IsRead" />
            <result property="FinishTime" column="FinishTime" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
        <resultMap id="proc_Task_Receiver_FindAll_Result" class="TaskWorkItemInfo">
            <result property="Id" column="Id" />
            <result property="ApplicationId" column="ApplicationId" />
            <result property="TaskCode" column="TaskCode" />
            <result property="Type" column="Type" />
            <result property="Title" column="Title" />
            <result property="Content" column="Content" />
            <result property="Tags" column="Tags" />
            <result property="SenderId" column="SenderId" />
            <result property="ReceiverId" column="ReceiverId" />
            <result property="Status" column="Status" />
            <result property="IsRead" column="IsRead" />
            <result property="FinishTime" column="FinishTime" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
    </resultMaps>

    <statements>
        <insert id="proc_Task_Receiver_Insert" parameterClass="TaskReceiverInfo">
            IF NOT EXISTS ( SELECT 0 FROM `tb_Task_WorkItem` WHERE ( `TaskId` = #TaskId# AND `ReceiverId` = #ReceiverId# ) )
            BEGIN
                INSERT INTO `tb_Task_WorkItem`
                (
                    `TaskId`,
                    `ReceiverId`,
                    `Status`,
                    `IsRead`,
                    `FinishTime`
                )
                VALUES
                (
                    #TaskId#,
                    #ReceiverId#,
                    #Status#,
                    #IsRead#,
                    #FinishTime#
                )
            END
        </insert>

        <update id="proc_Task_Receiver_Update" parameterClass="TaskReceiverInfo">
            UPDATE `tb_Task_WorkItem` SET

                `TaskId` = #TaskId#,
                `ReceiverId` = #ReceiverId#,
                `Status` = #Status#,
                `IsRead` = #IsRead#,
                `FinishTime` = #FinishTime#

            WHERE `TaskId` = #TaskId#AND `ReceiverId` = #ReceiverId#
        </update>

        <insert id="proc_Task_Receiver_Save" parameterClass="TaskReceiverInfo">
            IF EXISTS(SELECT 0 FROM `tb_Task_WorkItem` WHERE `TaskId` = #TaskId# AND `ReceiverId` = #ReceiverId#)
            BEGIN
                UPDATE `tb_Task_WorkItem` SET

                    `TaskId` = #TaskId#,
                    `ReceiverId` = #ReceiverId#,
                    `Status` = #Status#,
                    `IsRead` = #IsRead#,
                    `FinishTime` = #FinishTime#

                WHERE `TaskId` = #TaskId#AND `ReceiverId` = #ReceiverId#
            END
            ELSE
            BEGIN
                INSERT INTO `tb_Task_WorkItem`
                (
                    `TaskId`,
                    `ReceiverId`,
                    `Status`,
                    `IsRead`,
                    `FinishTime`
                )
                VALUES
                (
                    #TaskId#,
                    #ReceiverId#,
                    #Status#,
                    #IsRead#,
                    #FinishTime#
                )
            END
        </insert>

        <delete id="proc_Task_Receiver_Delete" parameterClass="TaskReceiverInfo">
            DELETE FROM `tb_Task_WorkItem` WHERE $WhereClause$
        </delete>

        <delete id="proc_Task_Receiver_DeleteByTaskCode" parameterClass="TaskInfo">
            DELETE FROM `tb_Task_WorkItem` WHERE TaskId IN ( SELECT Id FROM `tb_Task` WHERE `ApplicationId` = #ApplicationId# AND `TaskCode` = #TaskCode# )
        </delete>

        <select id="proc_Task_Receiver_FindOne" resultMap="proc_Task_Receiver_FindOne_Result" >
            SELECT * FROM `tb_Task_WorkItem` T WHERE `Id` = #TaskId# AND `ReceiverId` = #ReceiverId#
        </select>

        <select id="proc_Task_Receiver_FindAll" resultMap="proc_Task_Receiver_FindAll_Result" >
            SELECT * FROM `tb_Task_WorkItem` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            <dynamic prepend="LIMIT">
                <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
                    0,$Length$
                </isNotEqual>
            </dynamic>
        </select>

        <select id="proc_Task_Receiver_GetPages" resultMap="proc_Task_Receiver_FindAll_Result" >
            SELECT * FROM `tb_Task_WorkItem` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            ORDER BY $OrderBy$

            LIMIT $StartIndex$, $PageSize$
        </select>

        <select id="proc_Task_Receiver_GetRowCount" >
            SELECT COUNT(*) AS 'RowCount' FROM `tb_Task_WorkItem` T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_Task_Receiver_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM `tb_Task_WorkItem` T WHERE $WhereClause$
        </select>

        <insert id="proc_Task_Receiver_Copy" >
            IF NOT EXISTS ( SELECT 0 FROM `tb_Task_WorkItem` WHERE ( `TaskId` = '$TaskId$' AND `ReceiverId` = '$ToReceiverId$' ) )
            BEGIN
                INSERT INTO `tb_Task_WorkItem`
                (
                    `Id`,
                    `ReceiverId`,
                    `Status`,
                    `IsRead`,
                    `FinishTime`
                )
                VALUES
                (
                    '$Id$',
                    '$ToReceiverId$',
                    '$Status$',
                    '$IsRead$',
                    '$FinishTime$'
                )
            END
        </insert>

        <insert id="proc_Task_Receiver_Cut" >
            IF EXISTS ( SELECT 0 FROM `tb_Task_WorkItem` WHERE `TaskId` = '$TaskId$' AND `ReceiverId` = '$ToReceiverId$' )
            BEGIN
                UPDATE `tb_Task_WorkItem` SET

                    `Id` = '$Id$',
                    `ReceiverId` = '$ToReceiverId$',
                    `Status` = '$Status$',
                    `IsRead` = '$IsRead$',
                    `FinishTime` = '$FinishTime$'

                WHERE `Id` = '$Id$' AND `ReceiverId` = '$FromReceiverId$'
            END
        </insert>

        <update id="proc_Task_Receiver_SetRead" >
            UPDATE `tb_Task_WorkItem` SET IsRead = #IsRead# WHERE Id = #Id# AND ReceiverId = #ReceiverId#
        </update>

        <update id="proc_Task_Receiver_SetStatus" >
            UPDATE `tb_Task_WorkItem` SET Status = #Status# WHERE Id = #Id# AND ReceiverId = #ReceiverId#
        </update>

        <update id="proc_Task_Receiver_SetFinished" >
            UPDATE `tb_Task_WorkItem` SET Status = 1, FinishTime = Now()  WHERE $WhereClause$
        </update>

        <update id="proc_Task_Receiver_SetUnfinished" >
            UPDATE `tb_Task_WorkItem` SET Status = 0, CreateDate = Now() WHERE $WhereClause$
        </update>

        <select id="proc_Task_Receiver_GetUnfinishedQuantities" >
            SELECT CAST(`Type` AS SIGNED) AS 'Type', COUNT(*) AS 'Count' FROM tb_Task_WorkItem WHERE ReceiverId = '$ReceiverId$' AND Status = 0 GROUP BY `Type` ORDER BY `Type`
        </select>
    </statements>
</sqlMap>
