<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Tasks.DAL.MySQL.TimingTaskReceiverProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="TimingTaskReceiverInfo" type="X3Platform.Tasks.Model.TimingTaskReceiverInfo,X3Platform.Tasks" />
    </alias>
    <resultMaps>
        <resultMap id="proc_TimingTask_Receiver_FindOne_Result" class="TimingTaskReceiverInfo">
            <result property="TimingTaskId" column="TimingTaskId" />
            <result property="ReceiverId" column="ReceiverId" />
            <result property="IsSend" column="IsSend" />
            <result property="SendTime" column="SendTime" />
        </resultMap>
        <resultMap id="proc_TimingTask_Receiver_FindAll_Result" class="TimingTaskReceiverInfo">
            <result property="TimingTaskId" column="TimingTaskId" />
            <result property="ReceiverId" column="ReceiverId" />
            <result property="IsSend" column="IsSend" />
            <result property="SendTime" column="SendTime" />
        </resultMap>
    </resultMaps>
    <statements>

        <insert id="proc_TimingTask_Receiver_Insert" parameterClass="TimingTaskReceiverInfo">
            INSERT INTO [tb_TimingTask_Receiver] (
            [TimingTaskId],
            [ReceiverId],
            [IsSend],
            [SendTime]
            )
            VALUES
            (
            #TimingTaskId#,
            #ReceiverId#,
            #IsSend#,
            #SendTime#
            )
        </insert>

        <update id="proc_TimingTask_Receiver_Update" parameterClass="TimingTaskReceiverInfo">
            UPDATE [tb_TimingTask_Receiver] SET

            [TimingTaskId] = #TimingTaskId#,
            [ReceiverId] = #ReceiverId#,
            [IsSend] = #IsSend#,
            [SendTime] = #SendTime#

            WHERE [TimingTaskId] = #TimingTaskId#AND [ReceiverId] = #ReceiverId#
        </update>
        <insert id="proc_TimingTask_Receiver_Save" parameterClass="TimingTaskReceiverInfo">
            IF EXISTS(SELECT 0 FROM [tb_TimingTask_Receiver] WHERE [TimingTaskId] = #TimingTaskId#AND [ReceiverId] = #ReceiverId#)
            BEGIN
            UPDATE [tb_TimingTask_Receiver] SET

            [TimingTaskId] = #TimingTaskId#,
            [ReceiverId] = #ReceiverId#,
            [IsSend] = #IsSend#,
            [SendTime] = #SendTime#

            WHERE [TimingTaskId] = #TimingTaskId#AND [ReceiverId] = #ReceiverId#
            END
            ELSE
            BEGIN
            INSERT INTO [tb_TimingTask_Receiver](
            [TimingTaskId],
            [ReceiverId],
            [IsSend],
            [SendTime]
            )
            VALUES
            (
            #TimingTaskId#,
            #ReceiverId#,
            #IsSend#,
            #SendTime#
            )
            END
        </insert>
        <delete id="proc_TimingTask_Receiver_Delete" >
            DELETE FROM [tb_TimingTask_Receiver] WHERE TimingTaskId IN ($Ids$)
        </delete>
        <delete id="proc_TimingTask_Receiver_DeleteByTaskCode" parameterClass="TimingTaskInfo">
            DELETE FROM [tb_TimingTask_Receiver] WHERE TimingTaskId IN (
                SELECT Id FROM tb_TimingTask WHERE [ApplicationId] = #ApplicationId# AND TaskCode = #TaskCode# )
        </delete>
        <select id="proc_TimingTask_Receiver_FindOne" resultMap="proc_TimingTask_Receiver_FindOne_Result" >
            SELECT * FROM [tb_TimingTask_Receiver] WHERE [TimingTaskId] = #TimingTaskId# AND [ReceiverId] = #ReceiverId#
        </select>

        <select id="proc_TimingTask_Receiver_FindAll" resultMap="proc_TimingTask_Receiver_FindAll_Result" >
            SELECT * FROM [tb_TimingTask_Receiver] T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
            
            <dynamic prepend="LIMIT">
                <isNotEqual prepend="LIMIT" property="Length" compareValue = "0">
                    0,$Length$
                </isNotEqual>
            </dynamic>
        </select>

        <select id="proc_TimingTask_Receiver_GetPages" resultMap="proc_TimingTask_Receiver_FindAll_Result" >
            SELECT * FROM [tb_TimingTask_Receiver] T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>

            ORDER BY $OrderBy$
            
            LIMIT $StartIndex$, $PageSize$
        </select>

        <select id="proc_TimingTask_Receiver_GetRowCount" >

            SELECT COUNT(*) AS 'RowCount' FROM [tb_TimingTask_Receiver] T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_TimingTask_Receiver_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM [tb_TimingTask_Receiver] T WHERE $WhereClause$
        </select>

        <update id="proc_TimingTask_SetSent" >
            UPDATE [tb_TimingTask_Receiver] SET IsSend = 1, SendTime = CURRENT_TIMESTAMP WHERE $WhereClause$
        </update>

        <update id="proc_TimingTask_SetUnsent" >
            UPDATE [tb_TimingTask_Receiver] SET IsSend = 0, SendTime = '2000-1-1' WHERE $WhereClause$
        </update>
    </statements>
</sqlMap>
