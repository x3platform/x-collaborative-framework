<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Membership.HumanResources.DAL.IBatis.MemberExtensionInformationProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="MemberExtensionInformation" type="X3Platform.Membership.HumanResources.Model.MemberExtensionInformation,X3Platform.Membership.HumanResources" />
  </alias>
  <resultMaps>
    <resultMap id="proc_Member_ExtensionInformation_FindOne_Result" class="MemberExtensionInformation">
      <result property="Id" column="Id" />
      <result property="AccountId" column="AccountId" />
      <result property="Country" column="Country" />
      <result property="National" column="National" />
      <result property="Passport" column="Passport" />
      <result property="MaritalStatus" column="MaritalStatus" />
      <result property="Professional" column="Professional" />
      <result property="Hobby" column="Hobby" />
      <result property="Profile" column="Profile" />
      <result property="HighestEducation" column="HighestEducation" />
      <result property="HighestDegree" column="HighestDegree" />
      <result property="ForeignLanguage" column="ForeignLanguage" />
      <result property="ForeignLanguageLevel" column="ForeignLanguageLevel" />
      <result property="GraduationSchool" column="GraduationSchool" />
      <result property="GraduationCertificateId" column="GraduationCertificateId" />
      <result property="Major" column="Major" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="AttendanceCardId" column="AttendanceCardId" />
      <result property="JobBegindate" column="JobBegindate" />
      <result property="JobOfficialDate" column="JobOfficialDate" />
      <result property="JobEndDate" column="JobEndDate" />
      <result property="JobStatus" column="JobStatus" />
      <result property="ContractType" column="ContractType" />
      <result property="ContractExpireDate" column="ContractExpireDate" />
      <result property="PaidHoliday" column="PaidHoliday" />
      <result property="Remark" column="Remark" />
      <result property="UpdateDate" column="UpdateDate" />
      <result property="CreateDate" column="CreateDate" />
    </resultMap>
    <resultMap id="proc_Member_ExtensionInformation_FindAll_Result" class="MemberExtensionInformation">
      <result property="Id" column="Id" />
      <result property="AccountId" column="AccountId" />
      <result property="Country" column="Country" />
      <result property="National" column="National" />
      <result property="Passport" column="Passport" />
      <result property="MaritalStatus" column="MaritalStatus" />
      <result property="Professional" column="Professional" />
      <result property="Hobby" column="Hobby" />
      <result property="Profile" column="Profile" />
      <result property="HighestEducation" column="HighestEducation" />
      <result property="HighestDegree" column="HighestDegree" />
      <result property="ForeignLanguage" column="ForeignLanguage" />
      <result property="ForeignLanguageLevel" column="ForeignLanguageLevel" />
      <result property="GraduationSchool" column="GraduationSchool" />
      <result property="GraduationCertificateId" column="GraduationCertificateId" />
      <result property="Major" column="Major" />
      <result property="EmployeeId" column="EmployeeId" />
      <result property="AttendanceCardId" column="AttendanceCardId" />
      <result property="JobBegindate" column="JobBegindate" />
      <result property="JobOfficialDate" column="JobOfficialDate" />
      <result property="JobEndDate" column="JobEndDate" />
      <result property="JobStatus" column="JobStatus" />
      <result property="ContractType" column="ContractType" />
      <result property="ContractExpireDate" column="ContractExpireDate" />
      <result property="PaidHoliday" column="PaidHoliday" />
      <result property="Remark" column="Remark" />
      <result property="UpdateDate" column="UpdateDate" />
      <result property="CreateDate" column="CreateDate" />
    </resultMap>
  </resultMaps>
  <statements>

    <insert id="proc_Member_ExtensionInformation_Insert" parameterClass="MemberExtensionInformation">
      INSERT INTO tb_Member_ExtensionInformation (
      Id,
      AccountId,
      Country,
      National,
      Passport,
      MaritalStatus,
      Professional,
      Hobby,
      Profile,
      HighestEducation,
      HighestDegree,
      ForeignLanguage,
      ForeignLanguageLevel,
      GraduationSchool,
      GraduationCertificateId,
      Major,
      EmployeeId,
      AttendanceCardId,
      JobBegindate,
      JobOfficialDate,
      JobEndDate,
      JobStatus,
      ContractType,
      ContractExpireDate,
      PaidHoliday,
      Remark,
      UpdateDate,
      CreateDate
      )
      VALUES
      (
      #Id#,
      #AccountId#,
      #Country#,
      #National#,
      #Passport#,
      #MaritalStatus#,
      #Professional#,
      #Hobby#,
      #Profile#,
      #HighestEducation#,
      #HighestDegree#,
      #ForeignLanguage#,
      #ForeignLanguageLevel#,
      #GraduationSchool#,
      #GraduationCertificateId#,
      #Major#,
      #EmployeeId#,
      #AttendanceCardId#,
      #JobBegindate#,
      #JobOfficialDate#,
      #JobEndDate#,
      #JobStatus#,
      #ContractType#,
      #ContractExpireDate#,
      #PaidHoliday#,
      #Remark#,
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP
      )
    </insert>

    <update id="proc_Member_ExtensionInformation_Update" parameterClass="MemberExtensionInformation">
      UPDATE tb_Member_ExtensionInformation SET

      Country = #Country#,
      National = #National#,
      Passport = #Passport#,
      MaritalStatus = #MaritalStatus#,
      Professional = #Professional#,
      Hobby = #Hobby#,
      Profile = #Profile#,
      HighestEducation = #HighestEducation#,
      HighestDegree = #HighestDegree#,
      ForeignLanguage = #ForeignLanguage#,
      ForeignLanguageLevel = #ForeignLanguageLevel#,
      GraduationSchool = #GraduationSchool#,
      GraduationCertificateId = #GraduationCertificateId#,
      Major = #Major#,
      EmployeeId = #EmployeeId#,
      AttendanceCardId = #AttendanceCardId#,
      JobBegindate = #JobBegindate#,
      JobOfficialDate = #JobOfficialDate#,
      JobEndDate = #JobEndDate#,
      JobStatus = #JobStatus#,
      ContractType = #ContractType#,
      ContractExpireDate = #ContractExpireDate#,
      PaidHoliday = #PaidHoliday#,
      Remark = #Remark#,
      UpdateDate = CURRENT_TIMESTAMP

      WHERE AccountId = #AccountId#
    </update>
    <insert id="proc_Member_ExtensionInformation_Save" parameterClass="MemberExtensionInformation">
      IF EXISTS(SELECT 0 FROM tb_Member_ExtensionInformation WHERE AccountId = #AccountId#)
      BEGIN
      UPDATE tb_Member_ExtensionInformation SET

      Country = #Country#,
      National = #National#,
      Passport = #Passport#,
      MaritalStatus = #MaritalStatus#,
      Professional = #Professional#,
      Hobby = #Hobby#,
      Profile = #Profile#,
      HighestEducation = #HighestEducation#,
      HighestDegree = #HighestDegree#,
      ForeignLanguage = #ForeignLanguage#,
      ForeignLanguageLevel = #ForeignLanguageLevel#,
      GraduationSchool = #GraduationSchool#,
      GraduationCertificateId = #GraduationCertificateId#,
      Major = #Major#,
      EmployeeId = #EmployeeId#,
      AttendanceCardId = #AttendanceCardId#,
      JobBegindate = #JobBegindate#,
      JobOfficialDate = #JobOfficialDate#,
      JobEndDate = #JobEndDate#,
      JobStatus = #JobStatus#,
      ContractType = #ContractType#,
      ContractExpireDate = #ContractExpireDate#,
      PaidHoliday = #PaidHoliday#,
      Remark = #Remark#,
      UpdateDate = CURRENT_TIMESTAMP

      WHERE AccountId = #AccountId#
      END
      ELSE
      BEGIN
      INSERT INTO tb_Member_ExtensionInformation(
      Id,
      AccountId,
      Country,
      National,
      Passport,
      MaritalStatus,
      Professional,
      Hobby,
      Profile,
      HighestEducation,
      HighestDegree,
      ForeignLanguage,
      ForeignLanguageLevel,
      GraduationSchool,
      GraduationCertificateId,
      Major,
      EmployeeId,
      AttendanceCardId,
      JobBegindate,
      JobOfficialDate,
      JobEndDate,
      JobStatus,
      ContractType,
      ContractExpireDate,
      PaidHoliday,
      Remark,
      UpdateDate,
      CreateDate
      )
      VALUES
      (
      #Id#,
      #AccountId#,
      #Country#,
      #National#,
      #Passport#,
      #MaritalStatus#,
      #Professional#,
      #Hobby#,
      #Profile#,
      #HighestEducation#,
      #HighestDegree#,
      #ForeignLanguage#,
      #ForeignLanguageLevel#,
      #GraduationSchool#,
      #GraduationCertificateId#,
      #Major#,
      #EmployeeId#,
      #AttendanceCardId#,
      #JobBegindate#,
      #JobOfficialDate#,
      #JobEndDate#,
      #JobStatus#,
      #ContractType#,
      #ContractExpireDate#,
      #PaidHoliday#,
      #Remark#,
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP
      )
      END
    </insert>
    <delete id="proc_Member_ExtensionInformation_Delete" parameterClass="MemberExtensionInformation">
      DELETE FROM tb_Member_ExtensionInformation WHERE Id IN($Ids$)
    </delete>
    <select id="proc_Member_ExtensionInformation_FindOneByAccountId" resultMap="proc_Member_ExtensionInformation_FindOne_Result" >
      SELECT * FROM tb_Member_ExtensionInformation
      WHERE AccountId = #AccountId#
    </select>

    <select id="proc_Member_ExtensionInformation_FindAll" resultMap="proc_Member_ExtensionInformation_FindAll_Result" >
      SELECT

      <dynamic prepend="TOP">
        <isNotEqual prepend="TOP" property="Length" compareValue = "0">
          $Length$
        </isNotEqual>
      </dynamic>

      * FROM tb_Member_ExtensionInformation
    </select>

    <select id="proc_Member_ExtensionInformation_GetPages" resultMap="proc_Member_ExtensionInformation_FindAll_Result" >
      SELECT *

      FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

      FROM tb_Member_ExtensionInformation T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>) TableIndex

      WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$

    </select>

    <select id="proc_Member_ExtensionInformation_GetRowCount" >

      SELECT COUNT(0) AS "RowCount" FROM tb_Member_ExtensionInformation T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>

    <select id="proc_Member_ExtensionInformation_IsExist" >
      SELECT COUNT(0) AS "Count" FROM tb_Member_ExtensionInformation T WHERE $WhereClause$
    </select>

  </statements>
</sqlMap>
