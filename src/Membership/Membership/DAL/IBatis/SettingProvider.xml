<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Membership.DAL.IBatis.SettingProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
	<alias>
		<typeAlias alias="SettingInfo" type="X3Platform.Membership.Model.SettingInfo,X3Platform.Membership" />
	</alias>
	<resultMaps>
		<resultMap id="proc_Setting_FindOne_Result" class="SettingInfo">
			<result property="Id" column="Id" />
			<result property="ApplicationSettingGroupId" column="ApplicationSettingGroupId" />
			<result property="Code" column="Code" />
			<result property="Text" column="Text" />
			<result property="Value" column="Value" />
			<result property="OrderId" column="OrderId" />
			<result property="Status" column="Status" />
			<result property="Remark" column="Remark" />
			<result property="UpdateDate" column="UpdateDate" />
			<result property="CreateDate" column="CreateDate" />
		</resultMap>
		<resultMap id="proc_Setting_FindAll_Result" class="SettingInfo">
			<result property="Id" column="Id" />
			<result property="ApplicationSettingGroupId" column="ApplicationSettingGroupId" />
			<result property="Code" column="Code" />
			<result property="Text" column="Text" />
			<result property="Value" column="Value" />
			<result property="OrderId" column="OrderId" />
			<result property="Status" column="Status" />
			<result property="Remark" column="Remark" />
			<result property="UpdateDate" column="UpdateDate" />
			<result property="CreateDate" column="CreateDate" />
		</resultMap>
	</resultMaps>
	<statements>

		<insert id="proc_Setting_Insert" parameterClass="SettingInfo">
			INSERT INTO [tb_Application_Setting] 
            (
				[Id],
				[ApplicationId],
				[ApplicationSettingGroupId],
				[Code],
				[Text],
				[Value],
				[OrderId],
				[Status],
				[Remark],
				[UpdateDate],
				[CreateDate]
			)
			VALUES
			(
				#Id#,
				#ApplicationId#,
				#ApplicationSettingGroupId#,
				#Code#,
				#Text#,
				#Value#,
				#OrderId#,
				#Status#,
				#Remark#,
				GetDate(),
				GetDate()
			)
		</insert>

		<update id="proc_Setting_Update" parameterClass="SettingInfo">
			UPDATE [tb_Application_Setting] SET

				[Id] = #Id#,
				[ApplicationId] = #ApplicationId#,
				[ApplicationSettingGroupId] = #ApplicationSettingGroupId#,
				[Code] = #Code#,
				[Text] = #Text#,
				[Value] = #Value#,
				[OrderId] = #OrderId#,
				[Status] = #Status#,
				[Remark] = #Remark#,
				[UpdateDate] = GetDate()

			WHERE [Id] = #Id# AND [UpdateDate] = #UpdateDate#
		</update>

		<delete id="proc_Setting_Delete" >
			DELETE FROM [tb_Application_Setting] WHERE $WhereClause$
		</delete>

		<select id="proc_Setting_FindOne" resultMap="proc_Setting_FindOne_Result" >
			SELECT * FROM [tb_Application_Setting] T WHERE [Id] = #Id#
		</select>

		<select id="proc_Setting_FindAll" resultMap="proc_Setting_FindAll_Result" >
			SELECT

			<dynamic prepend="TOP">
				<isNotEqual prepend="TOP" property="Length" compareValue = "0">
					$Length$
				</isNotEqual>
			</dynamic>

			* FROM [tb_Application_Setting] T

			  <dynamic prepend="WHERE">
				<isParameterPresent>
				  <isNotEmpty prepend="AND" property="WhereClause" >
					$WhereClause$
				  </isNotEmpty>
				</isParameterPresent>
			  </dynamic>
		</select>

		<select id="proc_Setting_GetPages" resultMap="proc_Setting_FindAll_Result" >
		  SELECT *

		  FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

		  FROM [tb_Application_Setting] T

		  <dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
		  </dynamic>) TableIndex

		  WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
		</select>

		<select id="proc_Setting_GetRowCount" >
		  SELECT COUNT(*) AS 'RowCount' FROM [tb_Application_Setting] T

		  <dynamic prepend="WHERE">
			<isParameterPresent>
			  <isNotEmpty prepend="AND" property="WhereClause" >
				$WhereClause$
			  </isNotEmpty>
			</isParameterPresent>
		  </dynamic>
		</select>

		<select id="proc_Setting_IsExist" >
			SELECT COUNT(0) AS 'Count' FROM [tb_Application_Setting] T WHERE $WhereClause$
		</select>
	</statements>
</sqlMap>
