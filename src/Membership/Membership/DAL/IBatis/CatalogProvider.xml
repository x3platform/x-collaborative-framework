<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Membership.DAL.IBatis.CatalogProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="CatalogInfo" type="X3Platform.Membership.Model.CatalogInfo,X3Platform.Membership" />
  </alias>
  <resultMaps>
    <resultMap id="proc_Catalog_FindOne_Result" class="CatalogInfo">
      <result property="Id" column="Id" />
      <result property="Name" column="Name" />
      <result property="DisplayType" column="DisplayType" />
      <result property="RootCatalogItemId" column="RootCatalogItemId" />
      <result property="OrderId" column="OrderId" />
      <result property="Remark" column="Remark" />
      <result property="Status" column="Status" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
    <resultMap id="proc_Catalog_FindAll_Result" class="CatalogInfo">
      <result property="Id" column="Id" />
      <result property="Name" column="Name" />
      <result property="DisplayType" column="DisplayType" />
      <result property="RootCatalogItemId" column="RootCatalogItemId" />
      <result property="OrderId" column="OrderId" />
      <result property="Remark" column="Remark" />
      <result property="Status" column="Status" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
  </resultMaps>
  <statements>

    <insert id="proc_Catalog_Insert" parameterClass="CatalogInfo">
      INSERT INTO tb_Catalog (
      Id,
      Name,
      DisplayType,
      RootCatalogItemId,
      OrderId,
      Remark,
      Status,
      ModifiedDate,
      CreatedDate
      )
      VALUES
      (
      #Id#,
      #Name#,
      #DisplayType#,
      #RootCatalogItemId#,
      #OrderId#,
      #Remark#,
      #Status#,
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP
      )
    </insert>

    <update id="proc_Catalog_Update" parameterClass="CatalogInfo">
      UPDATE tb_Catalog SET

      Name = #Name#,
      DisplayType = #DisplayType#,
      RootCatalogItemId = #RootCatalogItemId#,
      OrderId = #OrderId#,
      Remark = #Remark#,
      Status = #Status#,
      ModifiedDate = CURRENT_TIMESTAMP

      WHERE Id = #Id#
    </update>

    <delete id="proc_Catalog_Delete" parameterClass="CatalogInfo">
      DELETE FROM tb_Catalog WHERE $WhereClause$
    </delete>

    <select id="proc_Catalog_FindOne" resultMap="proc_Catalog_FindOne_Result" >
      SELECT * FROM tb_Catalog T
      WHERE Id = #Id#
    </select>

    <select id="proc_Catalog_FindAll" resultMap="proc_Catalog_FindAll_Result" >
      SELECT

      <dynamic prepend="TOP">
        <isNotEqual prepend="TOP" property="Length" compareValue = "0">
          $Length$
        </isNotEqual>
      </dynamic>

      * FROM tb_Catalog T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Catalog_GetPaging#MySql" resultMap="proc_Catalog_FindAll_Result" >
      SELECT * FROM tb_Catalog T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>

      ORDER BY $OrderBy$

      LIMIT $StartIndex$, $PageSize$
    </select>
    <select id="proc_Catalog_GetPaging#Oracle" resultMap="proc_Catalog_FindAll_Result" >
      SELECT T2.* FROM (
        SELECT ROWNUM RowIndex, T1.* FROM (
          SELECT * FROM tb_Catalog T

          <dynamic prepend="WHERE">
            <isParameterPresent>
              <isNotEmpty prepend="AND" property="WhereClause" >
                $WhereClause$
              </isNotEmpty>
            </isParameterPresent>
          </dynamic>

          ORDER BY $OrderBy$

        ) T1 WHERE ROWNUM &lt;= ($StartIndex$ + $PageSize$)
      ) T2 WHERE T2.RowIndex &gt; $StartIndex$
    </select>
    <select id="proc_Catalog_GetPaging#SqlServer" resultMap="proc_Catalog_FindAll_Result" >
      SELECT *

      FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

      FROM tb_Catalog T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>) TableIndex

      WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
    </select>

    <select id="proc_Catalog_GetRowCount" >
      SELECT COUNT(0) AS "RowCount" FROM tb_Catalog T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Catalog_IsExist" >
      SELECT COUNT(0) AS "Count" FROM tb_Catalog T WHERE $WhereClause$
    </select>
  </statements>
</sqlMap>
