<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Membership.DAL.IBatis.AccountBindingProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="AccountBindingInfo" type="X3Platform.Membership.Model.AccountBindingInfo,X3Platform.Membership" />
  </alias>
  <resultMaps>
    <resultMap id="proc_Account_Binding_FindOne_Result" class="AccountBindingInfo">
      <result property="AccountId" column="AccountId" />
      <result property="BindingType" column="BindingType" />
      <result property="BindingObjectId" column="BindingObjectId" />
      <result property="BindingOptions" column="BindingOptions" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
    <resultMap id="proc_Account_Binding_FindAll_Result" class="AccountBindingInfo">
      <result property="AccountId" column="AccountId" />
      <result property="BindingType" column="BindingType" />
      <result property="BindingObjectId" column="BindingObjectId" />
      <result property="BindingOptions" column="BindingOptions" />
      <result property="ModifiedDate" column="ModifiedDate" />
      <result property="CreatedDate" column="CreatedDate" />
    </resultMap>
  </resultMaps>
  <statements>
    <insert id="proc_Account_Binding_Insert" parameterClass="AccountBindingInfo">
      INSERT INTO tb_Account_Binding 
      (
        AccountId,
        BindingType,
        BindingObjectId,
        BindingOptions,
        ModifiedDate,
        CreatedDate
      )
      VALUES
      (
        #AccountId#,
        #BindingType#,
        #BindingObjectId#,
        #BindingOptions#,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
      )
    </insert>

    <update id="proc_Account_Binding_Update" parameterClass="AccountBindingInfo">
      UPDATE tb_Account_Binding SET

        BindingObjectId = #BindingObjectId#,
        BindingOptions = #BindingOptions#,
        ModifiedDate = CURRENT_TIMESTAMP

      WHERE AccountId = #AccountId# AND BindingType = #BindingType#
    </update>
    <delete id="proc_Account_Binding_Delete" >
      DELETE FROM tb_Account_Binding WHERE $WhereClause$
    </delete>
    <select id="proc_Account_Binding_FindOne" resultMap="proc_Account_Binding_FindOne_Result" >
      SELECT * FROM tb_Account_Binding WHERE AccountId = #AccountId# AND BindingType = #BindingType#
    </select>
    <select id="proc_Account_Binding_FindAllBindingObjectIds" >
      SELECT BindingObjectId FROM tb_Account_Binding WHERE $WhereClause$
    </select>
    <select id="proc_Account_Binding_FindAll#MySql" resultMap="proc_Account_Binding_FindAll_Result" >
      SELECT * FROM tb_Account_Binding T
                
      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
      
      <dynamic prepend="ORDER BY">
        <isNotEmpty prepend="AND" property="OrderBy" >
          $OrderBy$
        </isNotEmpty>
      </dynamic>
      
      <dynamic prepend="LIMIT">
        <isNotEqual prepend="LIMIT" property="Length" compareValue="0">
          0, $Length$
        </isNotEqual>
      </dynamic>
    </select>
    <select id="proc_Account_Binding_FindAll#SqlServer" resultMap="proc_Account_Binding_FindAll_Result" >
      SELECT

      <dynamic prepend="TOP">
        <isNotEqual prepend="TOP" property="Length" compareValue = "0">
          $Length$
        </isNotEqual>
      </dynamic>

      * FROM tb_Account_Binding T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>

      <dynamic prepend="ORDER BY">
        <isNotEmpty prepend="AND" property="OrderBy" >
          $OrderBy$
        </isNotEmpty>
      </dynamic>      
    </select>
    <select id="proc_Account_Binding_GetPaging#MySql"  resultMap="proc_Account_Binding_FindAll_Result" >
      SELECT * FROM tb_Account_Binding T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
      
      <dynamic prepend="ORDER BY">
        <isNotEmpty prepend="AND" property="OrderBy" >
          $OrderBy$
        </isNotEmpty>
      </dynamic>
      
      LIMIT $StartIndex$, $PageSize$
    </select>
    <select id="proc_Account_Binding_GetPaging#SqlServer" resultMap="proc_Account_Binding_FindAll_Result" >
      SELECT * 
      FROM (
           SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex
           FROM tb_Account_Binding T

          <dynamic prepend="WHERE">
            <isParameterPresent>
              <isNotEmpty prepend="AND" property="WhereClause" >
                $WhereClause$
              </isNotEmpty>
            </isParameterPresent>
          </dynamic>) TableIndex

      WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$
    </select>
    <select id="proc_Account_Binding_GetRowCount" >
      SELECT COUNT(0) AS "RowCount" FROM tb_Account_Binding T

      <dynamic prepend="WHERE">
        <isParameterPresent>
          <isNotEmpty prepend="AND" property="WhereClause" >
            $WhereClause$
          </isNotEmpty>
        </isParameterPresent>
      </dynamic>
    </select>
    <select id="proc_Account_Binding_IsExist" >
      SELECT COUNT(0) AS "Count" FROM tb_Account_Binding WHERE $WhereClause$
    </select>
    <insert id="proc_Account_Binding_Bind#MySql" parameterClass="AccountBindingInfo">
      INSERT INTO tb_Account_Binding 
      (
        AccountId,
        BindingType,
        BindingObjectId,
        BindingOptions,
        ModifiedDate,
        CreatedDate
      )      
      SELECT
    
        #AccountId#,
        #BindingType#,
        #BindingObjectId#,
        #BindingOptions#,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
      
      FROM DUAL
      WHERE NOT EXISTS ( SELECT * FROM tb_Account_Binding WHERE AccountId = #AccountId# AND BindingType = #BindingType#)
    </insert>
  </statements>
</sqlMap>
