<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="X3Platform.Membership.DAL.IBatis.GroupTreeProvider" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
    <alias>
        <typeAlias alias="GroupTreeInfo" type="X3Platform.Membership.Model.GroupTreeInfo,X3Platform.Membership" />
    </alias>
    <resultMaps>
        <resultMap id="proc_GroupTree_FindOne_Result" class="GroupTreeInfo">
            <result property="Id" column="Id" />
            <result property="Name" column="Name" />
            <result property="DisplayType" column="DisplayType" />
            <result property="RootTreeNodeId" column="RootTreeNodeId" />
            <result property="OrderId" column="OrderId" />
            <result property="Remark" column="Remark" />
            <result property="Status" column="Status" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
        <resultMap id="proc_GroupTree_FindAll_Result" class="GroupTreeInfo">
            <result property="Id" column="Id" />
            <result property="Name" column="Name" />
            <result property="DisplayType" column="DisplayType" />
            <result property="RootTreeNodeId" column="RootTreeNodeId" />
            <result property="OrderId" column="OrderId" />
            <result property="Remark" column="Remark" />
            <result property="Status" column="Status" />
            <result property="UpdateDate" column="UpdateDate" />
            <result property="CreateDate" column="CreateDate" />
        </resultMap>
    </resultMaps>
    <statements>

        <insert id="proc_GroupTree_Insert" parameterClass="GroupTreeInfo">
            INSERT INTO tb_GroupTree (
            Id,
            Name,
            DisplayType,
            RootTreeNodeId,
            OrderId,
            Remark,
            Status,
            UpdateDate,
            CreateDate
            )
            VALUES
            (
            #Id#,
            #Name#,
            #DisplayType#,
            #RootTreeNodeId#,
            #OrderId#,
            #Remark#,
            #Status#,
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
            )
        </insert>

        <update id="proc_GroupTree_Update" parameterClass="GroupTreeInfo">
            UPDATE tb_GroupTree SET

            Name = #Name#,
            DisplayType = #DisplayType#,
            RootTreeNodeId = #RootTreeNodeId#,
            OrderId = #OrderId#,
            Remark = #Remark#,
            Status = #Status#,
            UpdateDate = CURRENT_TIMESTAMP

            WHERE Id = #Id#
        </update>

        <delete id="proc_GroupTree_Delete" parameterClass="GroupTreeInfo">
            DELETE FROM tb_GroupTree WHERE $WhereClause$
        </delete>

        <select id="proc_GroupTree_FindOne" resultMap="proc_GroupTree_FindOne_Result" >
            SELECT * FROM tb_GroupTree T
            WHERE Id = #Id#
        </select>

        <select id="proc_GroupTree_FindAll" resultMap="proc_GroupTree_FindAll_Result" >
            SELECT

            <dynamic prepend="TOP">
                <isNotEqual prepend="TOP" property="Length" compareValue = "0">
                    $Length$
                </isNotEqual>
            </dynamic>

            * FROM tb_GroupTree T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_GroupTree_GetPages" resultMap="proc_GroupTree_FindAll_Result" >
            SELECT *

            FROM (SELECT *, ROW_NUMBER() OVER(ORDER BY $OrderBy$) AS RowIndex

            FROM tb_GroupTree T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>) TableIndex

            WHERE TableIndex.RowIndex BETWEEN $StartIndex$ + 1 AND $StartIndex$ + $PageSize$

        </select>

        <select id="proc_GroupTree_GetRowCount" >

            SELECT COUNT(*) AS 'RowCount' FROM tb_GroupTree T

            <dynamic prepend="WHERE">
                <isParameterPresent>
                    <isNotEmpty prepend="AND" property="WhereClause" >
                        $WhereClause$
                    </isNotEmpty>
                </isParameterPresent>
            </dynamic>
        </select>

        <select id="proc_GroupTree_IsExist" >
            SELECT COUNT(0) AS 'Count' FROM tb_GroupTree T WHERE $WhereClause$
        </select>

    </statements>
</sqlMap>
